<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kylo&#39;s Notebook</title>
  
  <subtitle>do {eat(); sleep(); code();} while (isAlive);</subtitle>
  <link href="https://yipwinghong.github.io/atom.xml" rel="self"/>
  
  <link href="https://yipwinghong.github.io/"/>
  <updated>2021-12-10T15:21:49.163Z</updated>
  <id>https://yipwinghong.github.io/</id>
  
  <author>
    <name>Kylo Yip</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Go 工程化规范设计</title>
    <link href="https://yipwinghong.github.io/2021/12/10/Go_engineering-specification-design/"/>
    <id>https://yipwinghong.github.io/2021/12/10/Go_engineering-specification-design/</id>
    <published>2021-12-09T17:42:39.000Z</published>
    <updated>2021-12-10T15:21:49.163Z</updated>
    
    
    <summary type="html">关于 Go 工程化与企业级应用开发的总结，持续更新中。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go 并发原语</title>
    <link href="https://yipwinghong.github.io/2021/10/15/Go_concurrency_primitives/"/>
    <id>https://yipwinghong.github.io/2021/10/15/Go_concurrency_primitives/</id>
    <published>2021-10-15T11:42:39.000Z</published>
    <updated>2021-12-09T16:58:04.443Z</updated>
    
    
    <summary type="html">Go 标准库（sync）中提供了很多原生支持的并发原语，本文将简单讲解其基本用法。以及从 Go 标准库或第三方库扩展，实现更多复杂功能的并发原语。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>数据血缘功能设计</title>
    <link href="https://yipwinghong.github.io/2021/10/10/Design_data-lineage/"/>
    <id>https://yipwinghong.github.io/2021/10/10/Design_data-lineage/</id>
    <published>2021-10-10T09:23:21.000Z</published>
    <updated>2021-11-11T07:35:13.676Z</updated>
    
    
    <summary type="html">大数据平台：数据血缘功能设计。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>迟来的一次复盘</title>
    <link href="https://yipwinghong.github.io/2021/09/26/2021-09-26_diary/"/>
    <id>https://yipwinghong.github.io/2021/09/26/2021-09-26_diary/</id>
    <published>2021-09-26T14:27:51.000Z</published>
    <updated>2021-11-14T08:50:42.583Z</updated>
    
    
    <summary type="html">What a melancholy life</summary>
    
    
    
    
    <category term="杂事" scheme="https://yipwinghong.github.io/tags/%E6%9D%82%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 性能优化基础</title>
    <link href="https://yipwinghong.github.io/2021/09/12/DB_mysql-optimization-basic/"/>
    <id>https://yipwinghong.github.io/2021/09/12/DB_mysql-optimization-basic/</id>
    <published>2021-09-11T16:41:00.000Z</published>
    <updated>2021-09-12T14:36:16.626Z</updated>
    
    
    <summary type="html">MySQL 优化基础，从 SQL、索引、库表几个层面考虑。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="数据库" scheme="https://yipwinghong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://yipwinghong.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>关于 B-Trees 的更多细节（译）</title>
    <link href="https://yipwinghong.github.io/2021/09/05/DB_b-trees-more-than-i-thought-id-want-to-know/"/>
    <id>https://yipwinghong.github.io/2021/09/05/DB_b-trees-more-than-i-thought-id-want-to-know/</id>
    <published>2021-09-05T15:44:56.000Z</published>
    <updated>2021-09-08T14:39:09.225Z</updated>
    
    
    <summary type="html">原文链接：https://benjamincongdon.me/blog/2021/08/17/B-Trees-More-Than-I-Thought-Id-Want-to-Know/</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="https://yipwinghong.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据库" scheme="https://yipwinghong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>《DDIA》阅读笔记（十一）：流处理系统</title>
    <link href="https://yipwinghong.github.io/2021/08/27/DDIA_note-15/"/>
    <id>https://yipwinghong.github.io/2021/08/27/DDIA_note-15/</id>
    <published>2021-08-27T13:27:37.000Z</published>
    <updated>2021-08-28T09:44:56.739Z</updated>
    
    
    <summary type="html">《DDIA》阅读笔记（十一）：流处理系统</summary>
    
    
    
    <category term="《数据密集型应用系统设计》阅读笔记" scheme="https://yipwinghong.github.io/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>微服务可用性设计</title>
    <link href="https://yipwinghong.github.io/2021/08/11/Go_microservices_availability_design/"/>
    <id>https://yipwinghong.github.io/2021/08/11/Go_microservices_availability_design/</id>
    <published>2021-08-11T13:42:39.000Z</published>
    <updated>2021-08-11T15:40:30.619Z</updated>
    
    
    <summary type="html">系统的可用性设计，主要包括隔离、超时、限流、降级、重试、负载均衡等方面。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
    <category term="微服务" scheme="https://yipwinghong.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>可靠的分布式计时器（译）</title>
    <link href="https://yipwinghong.github.io/2021/08/10/Algorithm_reliable-distributed-timer/"/>
    <id>https://yipwinghong.github.io/2021/08/10/Algorithm_reliable-distributed-timer/</id>
    <published>2021-08-10T13:10:14.000Z</published>
    <updated>2021-08-10T03:13:31.555Z</updated>
    
    
    <summary type="html">原文链接：https://0x709394.me/How-To%20Design%20A%20Reliable%20Distributed%20Timer</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="https://yipwinghong.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Go 工程化标准实践</title>
    <link href="https://yipwinghong.github.io/2021/08/04/Go_engineering-standard/"/>
    <id>https://yipwinghong.github.io/2021/08/04/Go_engineering-standard/</id>
    <published>2021-08-04T00:11:03.000Z</published>
    <updated>2021-08-11T15:26:32.240Z</updated>
    
    
    <summary type="html">总结 Go 语言工程化标准（最佳）实践。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go 内存模型（译）</title>
    <link href="https://yipwinghong.github.io/2021/07/31/Go_memory-model/"/>
    <id>https://yipwinghong.github.io/2021/07/31/Go_memory-model/</id>
    <published>2021-07-31T08:42:39.000Z</published>
    <updated>2021-08-07T01:15:21.612Z</updated>
    
    
    <summary type="html">原文链接：https://golang.org/ref/mem</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go Channel 应用</title>
    <link href="https://yipwinghong.github.io/2021/07/28/Go_channel-applications/"/>
    <id>https://yipwinghong.github.io/2021/07/28/Go_channel-applications/</id>
    <published>2021-07-28T11:40:09.000Z</published>
    <updated>2021-12-05T03:01:03.792Z</updated>
    
    
    <summary type="html">总结 Go 语言 Channel 的常见应用及最佳实践。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>《凤凰架构》阅读笔记（五）：服务构建与流量治理</title>
    <link href="https://yipwinghong.github.io/2021/07/25/Fenix_build-services/"/>
    <id>https://yipwinghong.github.io/2021/07/25/Fenix_build-services/</id>
    <published>2021-07-24T16:11:01.000Z</published>
    <updated>2021-08-08T16:00:22.314Z</updated>
    
    
    <summary type="html">《凤凰架构》阅读笔记（五）：服务构建与流量治理</summary>
    
    
    
    <category term="《凤凰架构》阅读笔记" scheme="https://yipwinghong.github.io/categories/%E3%80%8A%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>《凤凰架构》阅读笔记（四）：透明多级分流系统</title>
    <link href="https://yipwinghong.github.io/2021/07/23/Fenix_transparent-multilevel-diversion-system/"/>
    <id>https://yipwinghong.github.io/2021/07/23/Fenix_transparent-multilevel-diversion-system/</id>
    <published>2021-07-22T16:33:01.000Z</published>
    <updated>2021-10-05T14:32:37.116Z</updated>
    
    
    <summary type="html">《凤凰架构》阅读笔记（四）：透明多级分流系统</summary>
    
    
    
    <category term="《凤凰架构》阅读笔记" scheme="https://yipwinghong.github.io/categories/%E3%80%8A%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>《凤凰架构》阅读笔记（三）：事务处理</title>
    <link href="https://yipwinghong.github.io/2021/07/22/Fenix_transaction/"/>
    <id>https://yipwinghong.github.io/2021/07/22/Fenix_transaction/</id>
    <published>2021-07-22T00:44:27.000Z</published>
    <updated>2021-10-05T14:56:30.376Z</updated>
    
    
    <summary type="html">《凤凰架构》阅读笔记（三）：事务处理</summary>
    
    
    
    <category term="《凤凰架构》阅读笔记" scheme="https://yipwinghong.github.io/categories/%E3%80%8A%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>《凤凰架构》阅读笔记（二）：访问远程服务</title>
    <link href="https://yipwinghong.github.io/2021/07/21/Fenix_access-remote-service/"/>
    <id>https://yipwinghong.github.io/2021/07/21/Fenix_access-remote-service/</id>
    <published>2021-07-21T09:44:27.000Z</published>
    <updated>2021-10-05T15:15:32.329Z</updated>
    
    
    <summary type="html">《凤凰架构》阅读笔记（二）：访问远程服务</summary>
    
    
    
    <category term="《凤凰架构》阅读笔记" scheme="https://yipwinghong.github.io/categories/%E3%80%8A%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Go 异常处理</title>
    <link href="https://yipwinghong.github.io/2021/07/18/Go_error_handling/"/>
    <id>https://yipwinghong.github.io/2021/07/18/Go_error_handling/</id>
    <published>2021-07-18T08:42:39.000Z</published>
    <updated>2021-08-01T07:55:26.923Z</updated>
    
    
    <summary type="html">Go 语言的一大特点是其异常处理机制与其它语言很不一样，本文将探讨 Go 语言异常处理的最佳实践。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>《凤凰架构》阅读笔记（一）：软件架构演进</title>
    <link href="https://yipwinghong.github.io/2021/07/15/Fenix_architecture-evolution/"/>
    <id>https://yipwinghong.github.io/2021/07/15/Fenix_architecture-evolution/</id>
    <published>2021-07-14T16:11:01.000Z</published>
    <updated>2021-10-05T13:35:56.990Z</updated>
    
    
    <summary type="html">《凤凰架构》阅读笔记（一）：软件架构演进</summary>
    
    
    
    <category term="《凤凰架构》阅读笔记" scheme="https://yipwinghong.github.io/categories/%E3%80%8A%E5%87%A4%E5%87%B0%E6%9E%B6%E6%9E%84%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="设计" scheme="https://yipwinghong.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>微服务概览与治理</title>
    <link href="https://yipwinghong.github.io/2021/07/12/Go_microservices_governance/"/>
    <id>https://yipwinghong.github.io/2021/07/12/Go_microservices_governance/</id>
    <published>2021-07-12T12:42:39.000Z</published>
    <updated>2021-08-16T08:45:39.149Z</updated>
    
    
    <summary type="html">关于后端微服务架构的演进过程与治理措施。</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Go" scheme="https://yipwinghong.github.io/tags/Go/"/>
    
    <category term="微服务" scheme="https://yipwinghong.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>最大流问题</title>
    <link href="https://yipwinghong.github.io/2021/07/09/Algorithm_max-flow-problem/"/>
    <id>https://yipwinghong.github.io/2021/07/09/Algorithm_max-flow-problem/</id>
    <published>2021-07-09T15:10:14.000Z</published>
    <updated>2021-08-11T14:53:29.364Z</updated>
    
    
    <summary type="html">这次还是有权图哈~</summary>
    
    
    
    
    <category term="技术" scheme="https://yipwinghong.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="https://yipwinghong.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
